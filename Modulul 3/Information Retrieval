Information Retrieval

Information retrieval (IR) is finding material (usually documents) of an unstructured nature (usually text) that satisfies an information need from within large collections (usually stored on computers).
Information retrieval is a problem-oriented discipline, concerned with the problem of the effective and efficient transfer of desired information between human generator and human user In other words:
  • The indexing and retrieval of textual documents. 
  • Concerned firstly with retrieving relevant documents to a query. 
  • Query Matching
  • Ranking & Sorting

References:
  • Christopher D. Manning, Prabhakar Raghavan and Hinrich Schütze, Introduction to Information Retrieval, Cambridge University Press. 2008
    http://nlp.stanford.edu/IR-book/pdf/01bool.pdf
  • Robert R. Korfhage, Information Storage and Retrieval
  • Susan Feldman, Natural Language Processing in Information Retrieval:
    http://www.scism.lsbu.ac.uk/inmandw/ir/jaberwocky.htm


Directory API

This API is intended for developers who are writing client applications that manage devices, groups, group aliases, group members, organization units, users, and user aliases.

   https://developers.google.com/admin-sdk/directory/v1/get-start/getting-started
   https://developers.google.com/admin-sdk/directory/v1/guides/prerequisites

All requests to the Directory API must be authorized by an authenticated user.

The details of the authorization process, or "flow," for OAuth 2.0 vary somewhat depending on 		what kind of application you're writing. The following general process applies to all 			application types:

1.  When you create your application, you register it using the Google Developers Console. Google then provides information you'll need later, such as a client ID and a client secret.
2.  When your application needs access to user data, it asks Google for a particular scope of access.
3.  Google displays a consent screen to the user, asking them to authorize your application to request some of their data.
4.  If the user approves, then Google gives your application a short-lived access token.
5.  Your application requests user data, attaching the access token to the request.
6.  If Google determines that your request and the token are valid, it returns the requested data.

The Google APIs client libraries can handle some of the authorization process for you. They are available for a variety of programming languages; check the page with libraries and samples for more details.

   https://developers.google.com/admin-sdk/directory/v1/libraries


Lucene & Lucene.NET

Lucene is an open-source project that provides Java-based indexing and search technology. Using its API, it is easy to implement full-text search.

Lucene offers powerful features through a simple API:

Scalable, High-Performance Indexing
• small RAM requirements -- only 1MB heap
• incremental indexing as fast as batch indexing
• index size roughly 20-30% the size of text indexed

Powerful, Accurate and Efficient Search Algorithms
• ranked searching -- best results returned first
• multiple-index searching with merged results
• allows simultaneous update and searching
• flexible faceting, highlighting, joins and result grouping

There are many versions of Lucene, but our focus is on Lucene (written in Java) and Lucene.Net (written in C#).

Lucene.Net is a port of the Lucene search engine library, written in C# and targeted at .NET runtime users. The Lucene search library is based on an inverted index. Lucene.Net maintains the existing line-by-line port from Java to C#, 

fully automating and commoditizing the process such that the project can easily synchronize with the Java Lucene release schedule.

More information here:
   http://www.javacodegeeks.com/2010/05/introduction-to-apache-lucene-for-full.html
   http://www.codeproject.com/Articles/29755/Introducing-Lucene-Net
   https://www.safaribooksonline.com/library/view/windows-developer-power/0596527543/ch04s04.html




